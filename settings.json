{
    "env": {
      "CLAUDE_TEMPLATE_VERSION": "0.1.0"
    },
  
    "hooks": {
      "UserPromptSubmit": [
        {
          "hooks": [
            {
              "type": "command",
              "command": "bash .claude/hooks/bootstrap.sh"
            }
          ]
        }
      ],
  
      "PreToolUse": [
        {
          "matcher": "Write|Edit|MultiEdit",
          "hooks": [
            {
              "type": "command",
              "command": "sh .claude/hooks/lint-checker.sh"
            },
            {
              "type": "command",
              "command": "sh .claude/hooks/protect-rules.sh"
            }
          ]
        }
      ],
  
      "PostToolUse": [
        {
          "matcher": "Edit|Write|MultiEdit",
          "hooks": [
            {
              "type": "command",
              "command": "sh .claude/hooks/auto-commit.sh"
            }
          ]
        }
      ]
    },
  
    "permissions": {
      "allow": [
        "Bash(sh .claude/hooks/*.sh)",
        "Bash(git * *)",
        "Bash(git commit:*)",
        "Bash(git push:*)",
        "Bash(awk:*)", 
        "Bash(grep:*)", 
        "Bash(sed:*)", 
        "Bash(cat:*)",
        "Bash(date:*)", 
        "Bash(basename:*)", 
        "Bash(dirname:*)",
        "Bash(cut:*)", 
        "Bash(printf:*)",
        "Bash(rg * *)", 
        "Bash(fd * *)", 
        "Bash(jq * *)",
        "Bash(bat * *)", 
        "Bash(delta * *)"
      ],
      "deny": [
        "Bash(rm -rf:*)",
        "Bash(rm -r:*)",
        "Bash(sudo rm:*)",
        "Bash(rmdir:*)",
        "Bash(rm --recursive:*)",
        "Bash(rm --force:*)",
        "Bash(rm -f:*)",
        "Bash(rm -R:*)",
        "Bash(find * -delete:*)",
        "Bash(find * -exec rm:*)",
        "Bash(xargs rm:*)",
        "Bash(sudo:*)",
        "Bash(git config *)",
        "Bash(brew install *)",
        "Bash(chmod 777 *)",
        "Read(.env*)",
        "Read(id_rsa*)",
        "Read(*.key)",
        "Read(*.pem)",
        "Write(.env*)",
        "Write(id_rsa*)",
        "Write(*.key)",
        "Write(*.pem)"
      ]
    }
  }